#!/bin/bash

# Default parameters:
multi=1
charge=0
program=gaussian
runtype=o
prefix=""

proz_g16=12
proz_orc=6

mem_g16=10000
mem_orc=4000

route_g16_of="# pbe1pbe/def2SVP opt freq scf=tight int(grid=ultrafine) maxdisk=100gb empiricaldispersion=gd3bj"
route_g16_ts="# pbe1pbe/def2SVP opt=(ts,noeigen,calcfc) freq scf=tight int(grid=ultrafine) maxdisk=100gb empiricaldispersion=gd3bj"

route_orc_sp="! DLPNO-CCSD(T) def2-TZVP NoUseSym  def2-TZVP/C tightscf"
route_orc_of="! PBE0 def2-SVP def2/J RIJCOSX D3BJ TightSCF Opt Freq"
route_orc_ts="! PBE0 def2-SVP def2/J RIJCOSX D3BJ TightSCF OptTS Freq"

block_orc_sp=" "
block_orc_dft="%method \nGrid 4 \nFinalGrid 6 \nend "


###### definition of functions

function set_name {
base_name=${file%%.*}
base=$base_name.$filetype
in_file=`echo "$prefix$base"`

### note: check if the file is already present in current dirictory to prevent overwriting


}


function gen_g16 {
set_name

echo "%chk=$base_name.chk" >> $in_file
echo "%nprocshared=$proz_g16" >> $in_file
echo "%mem=$mem_g16" >> $in_file
echo " " >> $in_file
echo "$route" >> $in_file
echo " " >> $in_file
echo " $base_name generated with 2input " >> $in_file
echo " " >> $in_file
echo "$charge $multi" >> $in_file
echo "$coords " >> $in_file
echo " " >> $in_file
echo " " >> $in_file
echo " " >> $in_file

}


function gen_orc {
set_name

echo "# $base_name generated with 2input " >> $in_file
echo " " >> $in_file
echo "$route" >> $in_file
echo " " >> $in_file
echo "%MaxCore $mem_orc" >> $in_file
echo "%pal nprocs=$proz_orc " >> $in_file
echo "end " >> $in_file
echo " " >> $in_file
echo -e "$block" >> $in_file
echo " " >> $in_file
echo "* $charge $multi " >> $in_file
echo "$coords" >> $in_file
echo "*" >> $in_file
echo " " >> $in_file

}






while getopts "f:stH:n:M:hSc:m:g:o:" OPTION
do
	case $OPTION in 
	# general Variables
	m)
		multi=$OPTARG
	;;
	c) 
		charge=$OPTARG
	;;
	f)
		file=$OPTARG
	;;
	n)
		prozessoren=$OPTARG
	;;
	M)
		hauptspeicher=$OPTARG
	;;
	H)
		stunden=$OPTARG
		;;
	s)
		ausfuehren=true
	;;
	#compatibility stuff / shortcuts
	t) # kept for compatibility
		program=gaussian
		runtype=o
	;;
	S)
		program=orca
		runtype=s
	;;
	g)#call of an gaussian calculation
	program=gaussian
	runtype=$OPTARG
	;;
	o)#call of an orca calculation
	program=orca
	runtype=$OPTARG
	;;
	h)
		help_pfad=$(dirname $0)
		vim "$help_pfad/help2_input.txt"  
		exit
	;;
	*)
		echo -e "Usage of nonexistent flag.\033[31m Aborting.\033[0m"
		exit
	;;
	esac
done

#########################################################
#Eingabe wird auf potentielle Fehler ueberprueft
#########################################################

dateiendung=$(echo $file | grep -o -E "(.xyz|.out)\>")

if [ ! -f "$file" ]; then
	echo -e "No Input-File or File does not exist (use the flag -f).\033[31m Aborting.\033[0m"
	echo "################################################################"
	exit
fi

if [ -z "$dateiendung" ]; then
	echo -e "\033[31mInput-File $file is no .xyz or .out File. Aborting.\033[0m"
	echo "################################################################"
	exit
fi

if [ "$transition_state" = "true" ] && [ "$program" = "orca" ]; then
	echo -e "\033[31mTransition state with an ORCA single point calculation is not possible. Aborting.\033[0m"
	echo "################################################################"
	exit
fi

################################################################
#Falls es sich beim Input, um eine .out-Datei handelt, wird diese
#in eine xyz-Datei umgewandelt
################################################################


if [ $dateiendung = ".out" ]; then

	FILEHEAD=`head -3 $file `
	IDENTORCA=`echo "$FILEHEAD"| grep -c "        * O   R   C   A *"`
	IDENTGAUSSIAN=`echo "$FILEHEAD"| grep -c " Entering Gaussian System, Link 0"`

	PROGNAME="none"

	if [ "$IDENTORCA" = "0" ] & [ "$IDENTGAUSSIAN" = "1" ]
		then
		echo -e "Input-File $file is an Gaussian .out-File. Convert to .xyz."

		charge=$(grep Multiplicity $file | head -1 | awk '{print $3}')
		multi=$(grep Multiplicity $file | head -1 | awk '{print $6}') 
	
		echo "Charge and Multiplicity were adopted from $file and set to $charge and $multi."
	
		out2xyz $file
		coords=`echo " ${file/.out}.xyz "`
	fi 

	if [ "$IDENTORCA" = "1" ] & [ "$IDENTGAUSSIAN" = "0" ]
		then
		echo -e "Input-File $file is an ORCA .out-File. Convert to .xyz."

		charge=$(grep "Total Charge" $file | head -1 | awk '{print $5}')
		multi=$(grep "Multiplicity" $file | head -1 | awk '{print $4}') 
	
		echo "Charge and Multiplicity were adopted from $file and set to $charge and $multi."
	
		orc2xyz -f $file
		coords=`echo " ${file/.out}.xyz "`
	fi

fi

################################################################
#Ueberprueft anhand der Symbole fuer die Atomarten in der xyz-Datei
#(Chemcraft verwendet Zahlen, Avogadro Buchstaben), ob es sich um
#eine xyz-Datei aus Avogadro oder Gaussian handelt. Im Falle von
#Avogadro loescht er die ersten beiden Zeilen
################################################################

if [ $(grep -c '[[:upper:]]' $coords) -ne 0 ]; then
	sed -i '1d;2d' $coords
fi 

####################################################################
#Prüfung welches Program und welche Art der Berechnung gewählt wurde
#zuweisung spezifischer Parameter
####################################################################


case $program in 
	gaussian)
		echo "Gaussian input generation requested"
		case $runtype in
			o)
				route=$route_g16_of
			;;
			t)
				route=$route_g16_ts
				prefix="TS_"
			;;
			c)
				echo "custom runtype not implemented yet"
				exit
			;;
			*)
				echo "unknown runtype requested"
				exit
			;;
		esac
	filetype="dat"
	gen_g16
	;;
	orca)
		echo "ORCA input generation requested"
		case $runtype in
			s)
				route=$route_orc_sp
				prefix="SP_"
				block=$block_orc_sp
			;;
			o)
				route=$route_orc_of
				block=$block_orc_dft
			;;
			t)
				route=$route_orc_ts
				prefix="TS_"
				block=$block_orc_dft
			;;
			c)
				echo "custom runtype not implemented yet"
				exit
			;;
			*)
				echo "unknown runtype requested"
				exit
			;;
		esac
	filetype="inp"
	gen_orc
	;;
	*)
		echo -e " Error: unknown program requested"
		exit
	;;
esac
