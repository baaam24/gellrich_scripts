#!/bin/bash

TEMPERATURE=298.15; ### T in K
BOLTZCONST=1.380649; ### k_B in 10^-23 J/K
PLANCKCONST=6.62607015; ### h in 10^-34 J*s
GASCONST='(8.314462618/4.184)'; ### R in cal/mol*K
hdivk=4.7992431; ### h/k_B in 10^-11 s*K
PI='(4*a(1))'
MOLINERTIA_avg=1	# in 10^-44 kg*m^2 corresponding to: 10^-44/B_av

#function check_freq { ### checks if NT=1, IMAG=0 or 1, XX=Gaussian
#
#}

function find_harmonicfreq { ### reads all harmonic frequencies from $FILE
		### $FILE = Gaussian output containing FREQ computation
			HARMFREQ=$(grep "Frequencies" $FILE | awk '{print $3,$4,$5}' | tr ' ' '\n')
				HARMFREQARR=($HARMFREQ)
			}

			function calc_Thetavib { ### calculates the vibrational temperature (in K) from $FREQ (in cm^-1)
					# THETA_vib = PLANCK * FREQUENCY / BOLTZMANN CONSTANT = (PLANCK * SPEED Of LIGHT / BOLTZMANN CONSTANT) * WAVE NUMBER
						unset THETA_vib
							THETA_vib=$(echo "1.43877696*$FREQ" | bc -l); #in K
						}

						function calc_S_vib { ### requires $FREQ in cm^-1 to calculate S_vib
								### S_vib = R * { [(h*FREQ) / (k*exp(h*FREQ/kT)-1)] - ln(1-exp(-h*FREQ/kT)) } from Grimme
									### S_vib = R * { [THETA_vib/(TEMPERATURE * (exp(THETA_vib/T) - 1) )] - ln[1 - exp(-THETA_vib/TEMPERATURE)] } from GAUSSIAN Thermochemistry
										unset S_vib COEFF_vib
											#S_vib=$(echo "$GASCONST*((($THETA_vib)/($TEMPERATURE*(e($THETA_vib/$TEMPERATURE)-1)))-(l(1-e(-$THETA_vib/TEMPERATURE))))" | bc -l)
												COEFF_vib=$(echo "$THETA_vib/$TEMPERATURE" | bc -l) # Theta_vib / TEMPERATURE
													S_vib=$(echo "$GASCONST*((($COEFF_vib)/(e($COEFF_vib)-1))-(l(1-e(-$COEFF_vib))))" | bc -l)
												}

												#function find_MOLINERTIA { ### obtains the average molecular moment of interia B_av in units of 10^-44 kg*m^2 from $FILE
												#	unset MOLINERTIA_avg
												#	MOLINERTIA_avg=1; # in 10^-44 kg*m^2 corresponding to: 10^-44/B_av
												#}

												function calc_S_freerot { ### requires $FREQ in cm^-1 and $MOLINERTIA_avg (10^-44/B_av with B_av in kg*m^2) to calculate S_freerot
														### S_freerot = R * ( 0.5 + ln ( sqrt( (8 * PI^3 * inertia_red * k * T)/(h^2) ) ) )
															### S_freerot = 0.5*R * {5.356746219 + ln[TEMPERATURE] - ln[((10^-44)/B)+35.72353633*FREQ)]}
																unset S_freerot
																#	find_MOLINERTIA
																	S_freerot=$(echo "0.5*$GASCONST*(5.356746219+l($TEMPERATURE)-l($MOLINERTIA_avg+(35.72353633*$FREQ)))" | bc -l)
																		#find_MOLINERTIA
																			#INERTIA=$(echo "$PLANCKCONST/(8*$FREQ*$PI*$PI*(10^36))" | bc -l);
																				#INERTIA_red=$(echo "($INERTIA*$MOLINERTIA_avg)/($INERTIA+$MOLINERTIA_avg)" | bc -l)
																					#S_freerot=$(echo "$GASCONST*(0.5+l(sqrt((8*$PI*$PI*$PI*$INERTIA_red*$TEMPERATURE)/($hdivk*$PLANCKCONST*(10^-45)))))" | bc -l) 
																				}

																				function calc_S_quasiRRHO { ### requires $FREQ in cm^-1
																						unset S weightfact
																							FREQ_0=100; # in cm^-1, about 0.5 kT
																								damp=4; # Head-Gordon damping function
																									weightfact=$(echo "(1)/((1)+(($FREQ_0/$FREQ)^$damp))" | bc -l)
																										S=$(echo "($weightfact*$S_vib)+((1-$weightfact)*$S_freerot)" | bc -l)
																									}

																									#################################

																									FILE=$1 ### beta
																									#check_freq ## check --> Gaussian, Freq Computation, NT
																									find_harmonicfreq ### IMAGINARY FREQUENCIES!
																									S_qRRHO=0
																									for (( i=0 ; i < ${#HARMFREQARR[@]} ; i++ )); do
																											FREQ=${HARMFREQARR[$i]}	### in cm^-1
																											#	FREQ=$1 ### beta
																												calc_Thetavib
																													calc_S_vib
																														calc_S_freerot
																															calc_S_quasiRRHO
																																S_qRRHO=$(echo "$S+$S_qRRHO" | bc -l)
																																	echo -e "bugfix:\nFrequency $i: $FREQ\nS_freerot: $S_freerot\nS_vib: $S_vib\nS_qRRHO: $S"
																																done

																																echo "S_qRRHO / cal/mol: $S_qRRHO"

																																#### bugfix
																																#S=$(echo "$S*4184" | bc -l); echo "quasi RRHO Entropy: $S" 
																																#S_vib=$(echo "$S_vib*4184" | bc -l); echo "S_vib: $S_vib"
																																#S_freerot=$(echo "$S_freerot*4184" | bc -l); echo "S_freerot: $S_freerot"
																																#echo "Theta_vib: $THETA_vib"



