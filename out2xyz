#!/bin/bash

#####################################################################
#Flag fuer das Ausgeben des Hilfe Textfiles
#####################################################################

while getopts "h" OPTION
do
    case $OPTION in
    h)
 	help_pfad=$(dirname $0)
	vim "$help_pfad/help_out2xyz.txt" 
        exit
        ;;
*)
	echo -e "Usage of nonexistent flag.\033[31m Aborting.\033[0m"
	exit
	;;
    esac
done 


########################################
# FUNKTIONEN 
########################################

##### adapted from summary-script at 01 May 2019
function ident_prog { # identify the programm (gaussian, orca, ...) that created this OUT file
#orca:
IDENTORCA=`echo "$FILEHEAD" | grep -c "        * O   R   C   A *"`
IDENTGAUSSIAN=`echo "$FILEHEAD" | grep -c " Entering Gaussian System, Link 0"`
PROGID=0
PROGNAME="none"

if [ "$IDENTORCA" = "0" ] & [ "$IDENTGAUSSIAN" = "1" ]
        then
        PROGNAME="Gaussian"
fi

if [ "$IDENTORCA" = "1" ] & [ "$IDENTGAUSSIAN" = "0" ]
        then
        PROGNAME="ORCA"
fi

}

##############################################################
#Abbruch des Skripts, wenn kein Argument Ã¼bergeben wurde
##############################################################

if [ -z $1 ]; then
	echo -e "\033[31mNo argument. Aborting.\033[0m"
	exit
fi


##############################################################
#Falls Argument kein out-file ist, wird das Skript abgebrochen
##############################################################

dateiendung=$(echo $1 | grep -o -E ".out\>")

if [ -z $dateiendung ]; then
	echo -e "\033[31mArgument $1 is not an .out file. Aborting.\033[0m"
	exit
fi


FILEHEAD=$(head -3 $1)
ident_prog
case $PROGNAME in
	ORCA)


######### ORCA (BETA)


NATOMS=$(grep -m1 "Number of atoms" $1 | awk '{print $NF}')
HELPVAR=$(echo $NATOMS+1 | bc -l)
COORDS_RAW=$(tac $1 | grep -m1 -B"$HELPVAR" "CARTESIAN COORDINATES (ANGSTROEM)" | tac | tail -"$NATOMS")



	;;

	Gaussian)

###### GAUSSIAN

##############################################################
#Das Skript erkennt, ob eine Frequenzrechnung ausgefuehrt wurde
#und falls nicht wird ein anderer Algorithmus ausgefuehrt
##############################################################

NATOMS=`grep -m 1 "NAtoms=" $1 | awk '{print $2}' | sed -e 's/ //g'`	#read number of atoms

if grep -q "Redundant internal coordinates found in file" $1; then
		COORDS_RAW=`tac $1 | grep -m1 -i -B $NATOMS "Redundant internal coordinates found in file." | tac | sed -e 1d` #read the coordinates used for the frequency computation
	else
			echo -e "\e[33mNo frequency calculation was performed.\033[0m"
				if grep -q "Standard orientation" $1; then								#read the latest set of coordinates
							COORDS_RAW=$(tac $1 | grep -m 1 -B $(($NATOMS+4)) "Standard orientation" | tac | sed 1,5d | awk '{print $2 "\t" $4 "\t" $5 "\t" $6}')
								else
											COORDS_RAW=$(tac $1 | grep -m 1 -B $(($NATOMS+4)) "Input orientation" | tac | sed 1,5d | awk '{print $2 "\t"  $4 "\t" $5 "\t" $6}')
												fi
											fi
	;;
	\?)
		##### if neither Gaussian nor Orca
		echo "Specified Software not yet implemented."
		exit
	;;
esac


##### INDEPENDENT

##############################################################
#Rohkoordinaten werden formatiert und in eine neue xyz Datei geschrieben
##############################################################

COORDS=`echo "$COORDS_RAW" | sed -e 's/,0,/,/g' | sed -e 's/,-/    -/g' | sed -e 's/,/     /g' | sed -e "1ipufferzeile" | sed -e "1i$NATOMS" | sed -e 's/pufferzeile//g'` # some nice formatting

echo -e "Converting \033[1;32m$1\033[0m to \033[1;32m${1/.out}.xyz\033[0m"
echo "$COORDS" > ${1/.out}.xyz


