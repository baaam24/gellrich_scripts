#!/bin/bash

#################################################################
#Initialisierung von Variablen und dem Array mit den Ordnernamen
#################################################################

anzahl_ordner=0
declare -a namen_ordner
stunden=72:00:00


while getopts "hH:" OPTION
do
    case $OPTION in
    H)
        stunden=$OPTARG
        ;;
    h)
 	help_pfad=$(dirname $0)
	vim "$help_pfad/help_submit.txt" 
        exit
        ;;
    *)
	echo -e "Usage of nonexistent flag.\033[31m Aborting.\033[0m"
	exit
	;;
    esac
done 



#################################################################
#Schleife, die ueber jede Datei im entsprechenden Ordner geht
#################################################################

for file in *
do

#################################################################
#Es wird Ueberprueft, ob die aktuelle Datei ein Ordner ist
#################################################################

if [ -d $file ]; then
	
#################################################################
#In die Variable "test" wird der aktuelle Ordnername geschrieben,
#falls der Name nur aus K gefolgt von zwei Ziffern besteht
#################################################################
  		
	test=$(echo $file | grep -o -E "\<K[[:digit:]]{2}\>") 
	
#################################################################
#Falls es sich um einen Konformerenordner handelt, wird der Name
#in die temporäre Datei "ordner_datei.temp" geschrieben und die
#Variable "anzahl_ordner" um 1 erhöht
#################################################################

	if [ ! -z $test ]; then
		echo $file >> ordner_datei.temp
		anzahl_ordner=$(( $anzahl_ordner + 1 ))
	fi
fi
done

#################################################################
#Die for-Schleife liest alle Zeile in der Datei "ordner_datei.temp"
#aus und speichert diese im Array "namen_ordner"
#################################################################

for ((var=1;var<=$anzahl_ordner;var++))
do
	namen_ordner[$var]=$(tail -n $var ordner_datei.temp | head -n 1)
done	

#################################################################
#Falls kein Konformerordner vorhanden ist, wird das Skript beendet
#################################################################

if [ $anzahl_ordner -eq 0 ]; then
	echo -e "\e[31mNo conformere folder. Aborting.\e[39m"
	exit
fi

#################################################################
#Die for-Schleife geht in jeden Ordner im Array "namen_ordner"
#und submitted diese zu Gaussian oder ORCA (Unterscheidung anhand
#der Dateiendungen)
#################################################################

for ((var=1;var<=$anzahl_ordner;var++))
do
	pfad="$(pwd)/${namen_ordner[$var]}"
	cd $pfad

#################################################################
#Zählt die Anzahl der Gaussian16 und ORCA Input-Dateien im Ordner
#und speichert die Anzahl in den Variable "input_gaussian" und "input_orca"
#################################################################
	
	input_gaussian=$(find -type f -name *.dat | wc -l)
	input_orca=$(find -type f -name *.gjf | wc -l)

#################################################################
#Ueberprueft, ob keine Dateien, nur Gaussian16, nur ORCA oder 
#Gaussian16 und ORCA Input-Dateien im Ordner sind
#################################################################

	if [[ "$input_gaussian" -eq 0 && "$input_orca" -eq 0 ]]; then
		echo "###################################################################"
		echo ""		
		echo -e "\e[33mNo Input-files in folder ${namen_ordner[$var]}\e[39m"
	fi 

	if [[ "$input_gaussian" -gt 0 && "$input_orca" -eq 0 ]]; then
		echo "###################################################################"
		echo ""
		echo -e "\e[92mGaussian16 Input-files in folder ${namen_ordner[$var]}\e[39m"
		echo ""
		gaussian16 $stunden
	fi
 
	if [[ "$input_gaussian" -eq 0 && "$input_orca" -gt 0 ]]; then
		echo "###################################################################"
		echo ""
		echo -e "\e[92mORCA Input-files in folder ${namen_ordner[$var]}\e[39m"
		echo ""
		
		for file in *.gjf; 
		do
			orca $file $stunden
		done
	fi 

	if [[ "$input_gaussian" -gt 0 && "$input_orca" -gt 0 ]]; then
		echo "###################################################################"
		echo ""
		echo -e "ORCA and Gaussian16 Input-files in folder ${namen_ordner[$var]}.\e[33m Nothing will be submitted.\e[39m"
	fi 


	cd ..

	echo ""
done

rm ordner_datei.temp	
