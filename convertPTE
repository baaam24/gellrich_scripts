#!/bin/bash
# by Jama Ariai (jama.ariai@oc.jlug.de)
# interconverts Element Names, Element Symbols, Atomic Numbers and Standard Atomic Weights
#
#

unset INPUT OUTPUTINDEX LibPTE col_N col_E col_S col_W SEARCH TARGET OUTPUT

#### SETUP THE LIBRARY CONTAINING THE DATA

PATHSCRIPTS=$(dirname $0)
OUTPUTINDEX=0
LibPTE=$(find $PATHSCRIPTS/ -name "lib_*Periodic*Table*Elements*.txt" | head -1)
if [ ! -f $LibPTE ]; then echo -e "\033[31mLibrary not found! Aborting.\033[0m"; exit; fi 
LibHeader=$(head -1 $LibPTE | tr '[:upper:]' '[:lower:]')
col_N=$(echo "$LibHeader" | sed -n "1 s/atomicnumber.*//p" | sed 's/[^\t*]//g' | wc -c)
col_E=$(echo "$LibHeader" | sed -n "1 s/element.*//p" | sed 's/[^\t*]//g' | wc -c)
col_S=$(echo "$LibHeader" | sed -n "1 s/symbol.*//p" | sed 's/[^\t*]//g' | wc -c)
col_W=$(echo "$LibHeader" | sed -n "1 s/standardatomicweight.*//p" | sed 's/[^\t*]//g' | wc -c)

#echo Library: $LibPTE 
#echo Atomic Numbers in column $col_N
#echo Element Names in column $col_E
#echo Element Symbol in column $col_S
#echo Standard Atomic Weights in column $col_W

while getopts "hN:E:S:W:" OPTION
do
	    case $OPTION in
		    		h)
								cat "$PATHSCRIPTS/help_convertPTE.txt" 
								#			echo "Help-File does not exist (yet)".
											exit
													;;
															N)	# Output = Atomic Number
																			OUTPUTINDEX=$col_N
																						INPUT=$OPTARG
																								;;
																										E)	# Output = Element Name
																														OUTPUTINDEX=$col_E
																																	INPUT=$OPTARG
																																			;;
																																					S)	# Output = Element Symbol
																																									OUTPUTINDEX=$col_S
																																												INPUT=$OPTARG
																																														;;
																																																W)	# Output = Standard Atomic Weight
																																																				OUTPUTINDEX=$col_W
																																																							INPUT=$OPTARG
																																																									;;
																																																											*)
																																																															echo -e "Nonexistent flag.\033[31m Aborting.\033[0m"
																																																																		exit
																																																																				;;
																																																																				    esac
																																																																			    done 

																																																																			    if [ -z $INPUT ]; then
																																																																				    	INPUT=$1
																																																																				fi

																																																																				#### ALIAS for Input
																																																																				aliasINPUT=$(echo "$INPUT" | tr [:upper:] [:lower:])
																																																																				if [[ $INPUT = 'aluminum' ]]; then INPUT=aluminium; fi
																																																																				if [[ $INPUT = 'cesium' ]]; then INPUT=caesium; fi

																																																																				#echo "Input is $INPUT"
																																																																				#echo "Output is column: $OUTPUTINDEX"

																																																																				##############################################################

																																																																				if [[ $INPUT =~ ^[0-9]{1,3}$ ]]; then	# if Input = Integer, then Input = Atomic Number
																																																																					#	echo "Identified an Atomic Number as Input"
																																																																						INPUT=$(echo $INPUT | sed 's/^0*//')	# delete leading '0'
																																																																							SEARCH=$(cat $LibPTE | awk -v col=$col_N '{print $col}')	##### Search = Column of given Input
																																																																								if echo "$SEARCH" | grep -w -q $INPUT; then					
																																																																											TARGET=$(echo "$SEARCH" | grep -w -n $INPUT | cut -f1 -d':')	### Target-Linenumber
																																																																												else
																																																																															echo -e "\033[31mGiven Atomic Number is invalid. Use Atomic Number < 119\033[0m"
																																																																																	exit
																																																																																		fi
																																																																																	fi

																																																																																	if [[ $INPUT =~ ^([A-Z]*[a-z]*)+$ ]]; then	# Input = Element or Symbol
																																																																																		#	echo "Input is either an Element name or an Element Symbol"
																																																																																			SEARCH=$(cat $LibPTE | awk -v col1=$col_E -v col2=$col_S '{print $col1 " " $col2}')	##### Search = Column of given Input
																																																																																				if echo "$SEARCH" | grep -i -w -q $INPUT; then
																																																																																							TARGET=$(echo "$SEARCH" | grep -i -w -n $INPUT | cut -f1 -d':')	### Target-Linenumber
																																																																																								else
																																																																																											echo -e "\033[31mCould not find the given Element.\033[0m"
																																																																																													exit
																																																																																														fi
																																																																																													fi

																																																																																													#echo "Target is Line $TARGET"

																																																																																													if [ -z $TARGET ]; then
																																																																																															echo -e "\033[31mConversion failed. Invalid Argument? Aborting.\033[0m"
																																																																																																exit
																																																																																															fi

																																																																																															#### Output

																																																																																															OUTPUT=$(cat $LibPTE | sed -n "$TARGET"p | awk -v col=$OUTPUTINDEX '{print $col}')
																																																																																															if [[ $OUTPUT = '-' ]]; then
																																																																																																	echo -e "\033[31mRequested Standard Atomic Weight does not exist.\033[0m"
																																																																																																else
																																																																																																		echo $OUTPUT
																																																																																																	fi


